// Generated by CoffeeScript 1.6.2
var LimitedSizeStore;

LimitedSizeStore = (function() {
  function LimitedSizeStore(limit, ensure_limit_rate) {
    this.limit = limit != null ? limit : 1000;
    this.ensure_limit_rate = ensure_limit_rate != null ? ensure_limit_rate : 0.01;
    this.store = {};
    this.ts = {};
  }

  LimitedSizeStore.prototype.set = function(key, value, ts) {
    if (ts == null) {
      ts = new Date().getTime() / 1000;
    }
    key = key.toString();
    this.store[key] = value;
    this.ts[key] = ts;
    if (Math.random() < this.ensure_limit_rate) {
      this.ensureLimit();
    }
    return void 0;
  };

  LimitedSizeStore.prototype.get = function(key) {
    return [this.store[key], this.ts[key]];
  };

  LimitedSizeStore.prototype.ensureLimit = function() {
    var element, k, to_remove, ts_list, v, _i, _len;

    ts_list = (function() {
      var _ref, _results;

      _ref = this.ts;
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        _results.push([k, v]);
      }
      return _results;
    }).call(this);
    ts_list.sort(function(v1, v2) {
      return v2[1] - v1[1];
    });
    to_remove = ts_list.splice(this.limit);
    for (_i = 0, _len = to_remove.length; _i < _len; _i++) {
      element = to_remove[_i];
      delete this.store[element[0]];
      delete this.ts[element[0]];
    }
    return void 0;
  };

  LimitedSizeStore.prototype.toJSON = function() {
    var key, ret;

    ret = {};
    for (key in this.store) {
      ret[key] = this.get(key);
    }
    return ret;
  };

  return LimitedSizeStore;

})();

exports.LimitedSizeStore = LimitedSizeStore;
